local raiiLibrary = loadstring(game:HttpGet("https://raiidev.xyz/raiilib/raiilib.lua"))()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local currentSpeed = 16
local flying = false
local flyConnection = nil
local AutoTreeFarmEnabled = false
local WallhackEnabled = false
local ChestESPEnabled = false

local window = raiiLibrary:createWindow({
    Name = "Project-E Scripts",
    Theme = "Dark",
    Blur = true,
    Loading = {
        Name = "Project-E Scripts",
        Desc = "by Speedy"
    },
    activeTab = "Main"
})

local mainTab = window:createTab("Home", 'home')
local playerTab = window:createTab("Character", 'user')
local lootTab = window:createTab("Loot", 'package')
local mobsTab = window:createTab("Mobs", 'crosshair')
local settingsTab = window:createTab("Settings", 'settings')


local function setWalkSpeed(speed)
    currentSpeed = speed
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("Humanoid") then
        character.Humanoid.WalkSpeed = speed
    end
end

local function toggleWallhack(state)
    WallhackEnabled = state
    if state then
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("BasePart") and not obj:IsDescendantOf(LocalPlayer.Character) then
                obj.LocalTransparencyModifier = 0.5
            end
        end
    else
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("BasePart") then
                obj.LocalTransparencyModifier = 0
            end
        end
    end
end

local function toggleChestESP(state)
    ChestESPEnabled = state
    if state then
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj.Name:find("Chest") or obj.Name:find("chest") or obj.Name:find("Item") then
                local highlight = Instance.new("Highlight")
                highlight.FillColor = Color3.fromRGB(255, 215, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 165, 0)
                highlight.FillTransparency = 0.3
                highlight.OutlineTransparency = 0
                highlight.Adornee = obj
                highlight.Parent = obj
            end
        end
    else
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:FindFirstChildWhichIsA("Highlight") then
                obj:FindFirstChildWhichIsA("Highlight"):Destroy()
            end
        end
    end
end

task.spawn(function()
    while true do
        if AutoTreeFarmEnabled and LocalPlayer.Character then
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj.Name == "Trunk" and obj.Parent and obj.Parent.Name == "Small Tree" then
                    if not AutoTreeFarmEnabled then break end
                    LocalPlayer.Character:PivotTo(obj.CFrame + Vector3.new(0, 3, 0))
                    task.wait(0.5)
                    for i = 1, 5 do
                        if not AutoTreeFarmEnabled then break end
                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 1)
                        task.wait(0.05)
                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 1)
                        task.wait(0.3)
                    end
                    task.wait(1)
                end
            end
        end
        task.wait(2)
    end
end)

local function teleportToFirstChest()
    for _, obj in pairs(workspace:GetDescendants()) do
        if (obj.Name:find("Chest") or obj.Name:find("chest") or obj.Name:find("Item Chest")) and LocalPlayer.Character then
            LocalPlayer.Character:PivotTo(obj:GetPivot() + Vector3.new(0, 3, 0))
            task.wait(1)
            break -- Stop after teleporting to the first chest
        end
    end
end

local function teleportToFirstMob(mobName)
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj.Name:find(mobName) and obj:IsA("Model") and LocalPlayer.Character then
            LocalPlayer.Character:PivotTo(obj:GetPivot() + Vector3.new(0, 3, 0))
            task.wait(1)
            break -- Stop after teleporting to the first mob
        end
    end
end

local function startFlying()
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.P = 90000
    bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.CFrame = hrp.CFrame
    bodyGyro.Parent = hrp

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bodyVelocity.Parent = hrp

    flyConnection = RunService.RenderStepped:Connect(function()
        local moveVec = Vector3.new(0, 0, 0)
        local camCF = workspace.CurrentCamera.CFrame
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveVec += camCF.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveVec -= camCF.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveVec -= camCF.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveVec += camCF.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveVec += Vector3.new(0, 1, 0) end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then moveVec -= Vector3.new(0, 1, 0) end
        bodyVelocity.Velocity = moveVec.Magnitude > 0 and moveVec.Unit * 60 or Vector3.new(0, 0, 0)
        bodyGyro.CFrame = camCF
    end)
end

local function stopFlying()
    if flyConnection then flyConnection:Disconnect() end
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        for _, child in pairs(hrp:GetChildren()) do
            if child:IsA("BodyGyro") or child:IsA("BodyVelocity") then child:Destroy() end
        end
    end
end

local mainSection = mainTab:createSection("Main Functions")
mainTab:createButton({
    Name = " Teleport to Campfire",
    Callback = function()
        if LocalPlayer.Character then
            LocalPlayer.Character:PivotTo(CFrame.new(0, 10, 0))
        end
    end
})
mainTab:createButton({
    Name = " Teleport to Grinder",
    Callback = function()
        if LocalPlayer.Character then
            LocalPlayer.Character:PivotTo(CFrame.new(16.1, 4, -4.6))
        end
    end
})
mainTab:createToggle({
    Name = " No Fog",
    toggleState = false,
    Callback = function(value)
        if value then
            game.Lighting.FogStart = 999999
            game.Lighting.FogEnd = 1000000
        else
            game.Lighting.FogStart = 20
            game.Lighting.FogEnd = 100
        end
    end
})

local playerSection = playerTab:createSection("Character Functions")
playerTab:createSlider({
    Name = " Speed",
    Range = {16, 100},
    Increment = 1,
    Measurement = "units",
    currValue = 16,
    Callback = function(value)
        setWalkSpeed(value)
    end
})
playerTab:createToggle({
    Name = " Fly",
    toggleState = false,
    Callback = function(value)
        flying = value
        if value then
            startFlying()
        else
            stopFlying()
        end
    end
})
playerTab:createToggle({
    Name = " Wallhack",
    toggleState = false,
    Callback = function(value)
        toggleWallhack(value)
    end
})

local lootSection = lootTab:createSection("Loot Functions")
lootTab:createButton({
    Name = " Teleport to Chest",
    Callback = function()
        teleportToFirstChest()
    end
})
lootTab:createToggle({
    Name = " Chest ESP",
    toggleState = false,
    Callback = function(value)
        toggleChestESP(value)
    end
})
lootTab:createToggle({
    Name = " Auto Tree Farm",
    toggleState = false,
    Callback = function(value)
        AutoTreeFarmEnabled = value
    end
})

local mobsSection = mobsTab:createSection("Mob Functions")
mobsTab:createButton({
    Name = " Teleport to Wolf",
    Callback = function()
        teleportToFirstMob("Wolf")
    end
})
mobsTab:createButton({
    Name = " Teleport to Bear",
    Callback = function()
        teleportToFirstMob("Bear")
    end
})
mobsTab:createButton({
    Name = " Teleport to Rabbit",
    Callback = function()
        teleportToFirstMob("Bunny")
    end
})

local settingsSection = settingsTab:createSection("Settings")
settingsTab:createButton({
    Name = " Reload Menu",
    Callback = function()
        window:destroy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/your-repo/menu.lua"))()
    end
})
settingsTab:createToggle({
    Name = "",
    toggleState = true,
    Callback = function(value)
        window:setVisible(value)
    end
})
settingsTab:createButton({
    Name = " Save Settings",
    Callback = function()
        print("Settings saved!")
    end
})

LocalPlayer.CharacterAdded:Connect(function(character)
    task.wait(1)
    if character:FindFirstChild("Humanoid") then
        character.Humanoid.WalkSpeed = currentSpeed
    end
end)

task.spawn(function()
    task.wait(2)
    setWalkSpeed(currentSpeed)
end)

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        window:setVisible(not window:isVisible())
    elseif input.KeyCode == Enum.KeyCode.Insert then
        window:setEnabled(not window:isEnabled())
    end
end)